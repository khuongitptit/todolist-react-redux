{"version":3,"sources":["components/InputTask.js","components/AddButton.js","components/AddTask.js","actions/index.js","constants/ActionTypes.js","components/DoneButton.js","components/DeleteButton.js","components/Task.js","components/ListTask.js","App.js","reducers/Tasks.js","reducers/index.js","store/configStore.js","index.js"],"names":["InputTask","props","handleTextChange","event","setState","taskText","target","value","state","type","placeholder","onChange","this","ref","inputRef","React","Component","AddButton","onClick","handleAddClick","AddTask","console","log","current","newTask","id","uuidv4","name","isDone","createRef","className","connect","dispatch","task","actions","DoneButton","handleDoneClick","onDoneClick","disabled","isDisabled","role","aria-label","DeleteButton","handleDeleteClick","onDeleteClick","action","Task","ListTask","list","listTask","forEach","push","Tasks","App","index","indexOf","splice","initialState","existId","delId","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2e6a2808.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass InputTask extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ taskText :''};\r\n    }\r\n    handleTextChange = event => {\r\n        this.setState({taskText : event.target.value});\r\n    }\r\n    render(){\r\n        return (\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Todo item here..\"\r\n                onChange={this.handleTextChange}\r\n                value={this.state.taskText}\r\n                ref={this.props.inputRef}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputTask;","import React from 'react';\r\nclass AddButton extends React.Component{\r\n    render(){\r\n        return (\r\n            <button onClick={this.props.handleAddClick}>Add to list</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\n\r\nimport InputTask from './InputTask';\r\nimport AddButton from './AddButton';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\nimport { v4 as uuidv4} from 'uuid';\r\n\r\nclass AddTask extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n    }\r\n    handleAddClick = () => {\r\n        console.log(this.inputRef.current.value);\r\n        const newTask = {\r\n            id: uuidv4(),\r\n            name: this.inputRef.current.value,\r\n            isDone : false\r\n        }\r\n        this.props.handleAddClick(newTask);\r\n    }\r\n    render(){\r\n        return (\r\n            \r\n            <div className=\"add-task\">\r\n                <h3 className=\"text-center\">Add new task</h3>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <InputTask\r\n                        //onTextChange={this.props.onTextChange}\r\n                        //taskText={this.props.taskText}\r\n                        inputRef={this.inputRef}\r\n                    />\r\n                    <AddButton\r\n                        handleAddClick={this.handleAddClick}\r\n                    />\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        );\r\n        \r\n    }\r\n    \r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch , props) => {\r\n    return {\r\n        handleAddClick : (task) => {\r\n            dispatch(actions.addTask(task));\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n//export default AddTask;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask);","import * as types from '../constants/ActionTypes';\r\n\r\nexport const getList = () => {\r\n    return {\r\n        type: types.GET_LIST\r\n    }\r\n};\r\nexport const addTask = task => {\r\n    return {\r\n        type: types.ADD_TASK,\r\n        task\r\n    }\r\n};\r\nexport const doneTask = id => {\r\n    return{\r\n        type: types.DONE_TASK,\r\n        id\r\n    }\r\n};\r\n\r\nexport const deleteTask = id => {\r\n    return {\r\n        type: types.DELETE_TASK,\r\n        id\r\n    }\r\n};","export const GET_LIST = 'GET_LIST';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const DONE_TASK = 'DONE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions/index' \r\nclass DoneButton extends React.Component{\r\n    handleDoneClick = () => {\r\n        this.props.onDoneClick(this.props.id);\r\n    }\r\n    render(){\r\n        return (\r\n            <button \r\n                disabled={this.props.isDisabled}\r\n                id={this.props.id}\r\n                onClick={this.handleDoneClick}\r\n                className=\"done-btn\"\r\n            >\r\n                <span role='img' aria-label=\"Done\">&#9989;</span>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch , props) => {\r\n    return {\r\n        onDoneClick: (id) => {\r\n            dispatch(actions.doneTask(id))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DoneButton);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions/index'\r\nclass DeleteButton extends React.Component{\r\n    handleDeleteClick = () => {\r\n        this.props.onDeleteClick(this.props.id);\r\n    }\r\n    render(){\r\n        return (\r\n            <button \r\n                id={this.props.id}\r\n                onClick={this.handleDeleteClick}\r\n                className=\"delete-btn\"\r\n            >\r\n                <span>&#10060;</span>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = ( dispatch , action ) => {\r\n    return {\r\n        onDeleteClick: id => {\r\n            dispatch(actions.deleteTask(id))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DeleteButton);","import React from 'react';\r\n\r\nimport DoneButton from './DoneButton';\r\nimport DeleteButton from './DeleteButton';\r\nclass Task extends React.Component{\r\n    render(){\r\n        return (\r\n            this.props.task.isDone \r\n                ?\r\n            <li className=\"d-flex mt-3\">\r\n                <DoneButton \r\n                    isDisabled={true}\r\n                    id={this.props.task.id}\r\n                    //onDoneClick={this.props.onDoneClick}\r\n                />\r\n                <DeleteButton \r\n                    id={this.props.task.id}\r\n                    //onDeleteClick={this.props.onDeleteClick}\r\n                />\r\n                <h3>{this.props.task.name} &#127383; </h3>\r\n            </li>\r\n                : \r\n            <li className=\"d-flex mt-3\">\r\n                <DoneButton \r\n                    isDisabled={false}\r\n                    id={this.props.task.id}\r\n                    //onDoneClick={this.props.onDoneClick}\r\n                />\r\n                <DeleteButton \r\n                    id={this.props.task.id}\r\n                    //onDeleteClick={this.props.onDeleteClick}\r\n                />\r\n                <h3>{this.props.task.name}</h3>\r\n            </li>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nimport Task from './Task';\r\n\r\nimport {connect} from 'react-redux';\r\nclass ListTask extends React.Component{\r\n    /*shouldComponentUpdate(){\r\n        return true;\r\n    }*/\r\n    render(){\r\n        let list = [];\r\n        this.props.listTask.forEach(task => {\r\n            list.push(\r\n                <Task \r\n                    task={task}\r\n                    // id={this.props.listTask.length-1}\r\n                    // onDoneClick={this.props.onDoneClick}\r\n                    // onDeleteClick={this.props.onDeleteClick}\r\n                />\r\n            );\r\n        });\r\n        console.log('oooo',this.props.listTask);\r\n        return (\r\n            <div className=\"list-task d-flex justify-content-center\">\r\n                <ul>\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n            \r\n        );\r\n    \r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listTask: state.Tasks\r\n    }\r\n   \r\n    \r\n    \r\n};\r\n\r\n//export default ListTask;\r\nexport default connect(mapStateToProps,null)(ListTask);","import React from 'react';\nimport AddTask from './components/AddTask';\nimport ListTask from './components/ListTask';\n\n\nclass App extends React.Component{\n//   constructor(props){\n//       super(props);\n//       this.state={\n//           listTask:[\n//               {\n//                   id:0,\n//                   name:\"Ngủ dậy\",\n//                   isDone:false\n//               }\n//           ],\n//           taskText:\"\"\n//       };\n//       this.inputElement = React.createRef();\n//   }\n\n  handleTextChange = taskText => {\n      this.setState({\n          taskText: taskText\n      });\n  }\n//   handleAddTask = taskText => {\n//       if(this.state.taskText==\"\"){\n//           alert(\"Bạn chưa nhập gì cả\");\n//       }\n//       else{\n//           let check = 0;\n//           this.state.listTask.forEach(task => {\n//               if(task.name===this.state.taskText) check++;\n//           });\n//           if(check){\n//               alert(\"Công việc này đã được thêm từ trước rồi\");\n//           }\n//           else{\n//               let listTask = [];\n//               this.state.listTask.forEach(task => {\n//                   listTask.push(task);\n//               });\n//               let newtask = { \n//                   id: randomId(),\n//                   name : this.state.taskText,\n//                   isDone:false\n//               };\n//               console.log(newtask);\n//               listTask.push(newtask);\n//               localStorage.setItem(\"tasks\",JSON.stringify(listTask));\n//               let getListTask = JSON.parse(localStorage.getItem(\"tasks\"));\n//               this.setState({ listTask : getListTask});\n//               this.setState({ taskText : \"\" });\n//           }\n//       }\n      \n//       this.setFocusOnInput();\n      \n//   }\n\n  handleDoneClick = id => {\n      let listTask = this.state.listTask;\n      listTask.forEach(task => {\n          if(task.id===id){\n              task.isDone=true;\n          }\n      });\n      this.setState({listTask : listTask});\n      //this.setFocusOnInput();\n  }\n  handleDeleteClick = id => {\n      console.log(id);\n      let index = -1;\n      let listTask = this.state.listTask;\n      listTask.forEach(task => {\n          if(task.id===id) index = listTask.indexOf(task);\n      });\n      listTask.splice(index,1);\n      console.log(listTask);\n      this.setState({listTask : listTask});\n      //this.setFocusOnInput();\n  }\n\n//   setFocusOnInput = () => {\n//       this.inputElement.current.focus();\n//   }\n  render(){\n      return (\n          <div className=\"container\">\n              <AddTask \n                  //onTextChange={this.handleTextChange}\n                  //handleAddClick={this.handleAddTask}\n                  //taskText={this.state.taskText}\n                  //inputRef={this.inputElement}\n              />\n              <ListTask \n                  //listTask={this.state.listTask}\n                  //onDoneClick={this.handleDoneClick}\n                  //onDeleteClick={this.handleDeleteClick}\n              />\n          </div>\n      );\n  }\n  \n}\n\nexport default App;\n","import * as types from '../constants/ActionTypes';\r\n\r\n\r\n// const data = JSON.parse(localStorage.getItem(\"tasks\"));\r\n// console.log(data);\r\nconst initialState =  []\r\nconst Tasks = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case types.GET_LIST:\r\n            return state;\r\n        case types.ADD_TASK:\r\n            let existId = -1\r\n            state.forEach(task => {\r\n                if(task.name === action.task.name){\r\n                    existId = state.indexOf(task)\r\n                }\r\n            })\r\n            return existId !== -1 ? state : [...state, action.task]\r\n            //return [...state, action.task];\r\n        case types.DONE_TASK:\r\n            state.forEach(task => {\r\n                if(task.id === action.id){\r\n                    task.isDone = true\r\n                }\r\n            })\r\n            return [...state]\r\n        case types.DELETE_TASK:\r\n            state.forEach(task => {\r\n                if(task.id === action.id){\r\n                    let delId = state.indexOf(task)\r\n                    state.splice(delId, 1)\r\n                }\r\n            })\r\n            return [...state]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Tasks;","import { combineReducers } from 'redux';\r\nimport Tasks from './Tasks';\r\n// import doneTask from './doneTask';\r\n// import deleteTask from './deleteTask';\r\nconst rootReducer = combineReducers({\r\n    Tasks\r\n    // doneTask,\r\n    // deleteTask\r\n});\r\n\r\nexport default rootReducer;","import {createStore} from 'redux'\r\nimport {persistStore, persistReducer} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport rootReducer from '../reducers/index'\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nexport const store = createStore(persistedReducer)\r\nexport const persistor = persistStore(store)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react'\nimport { store, persistor } from './store/configStore'\n\nReactDOM.render(\n    <Provider store = {store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App/>\n        </PersistGate>\n    </Provider>\n    ,document.getElementById('root'));\n\n"],"sourceRoot":""}